Stop Bursting Neuron when you hit stop

Put all Command Neurons Param file into 1 file

Save to a parameter file?
What to save?
Synapse

What would the synapse file look like?
I don't know?
Not sure

1) Drawer
////////////////////////
MAKE A SYNAPSE POPUP LIST
Make a box
Enumerate the 4 synapse types
Display them to users
Let them see what the options + params are
And allow user to edit it

WHAT WILL IT LOOK LIKE??????
So u need to list all synapse

MAKE A SYNAPSE CONTROLLER Class

COPY from TraceSelector
and from OscilloscopeController, where you change Params for alpha, sigma!!!!!

We'll make a window for now

How would users know which synapse is present
+ to pick from
Should we list all of them then..

Need a side and seg option

Cool, we call it in TraceSelector for now just to test
///////////////////////
DONE

Next step/TODO:
///////
Will make a button to house it inside the Scope later

What will the function be?
What's the behavior

Make a function inside the pc2Lobster.c

This will allow us to edit the values of those synapse on the fly

But how?
Should be similar to how you edit alpha and sigma of different neurons really

hmm, how does that work

There seem to be an ID that you choose for each cell...

We should do the same for Synapse?

But there are wayy more synapses than cells....

Make synapse saved file
So that the program will write to the synapse.

WHAT would the saved file look like?

2) Resize window?
How to resize oscilloscope

NOTE TO SELF:
Search SEARCH FOR ME to find where u left off

RIGHT NOW,
Protractor and Retractor look fine

Flexor and Extensor is not...
Just have to make them the same.

It's opposite
Forward and Backward

Modcom what does it do?

Maybe add synaptic changes so u can change gamma and Xrp and gStrength

let users resize windows

Change the size of the traces to make it bigger


ADD a Functionality to change Synaptic Input and Synaptic Strength.
So that we can change those value on the fly




1) Replace NSDrawer w sth else? But with what?? Too slow

2) Retractor and Protractor looks weird

3) Add threshold so that modcom set alpha and sigma of 4 CPGs w command neurons


4) Fix Command Neuron so they don't randomly spike on the Bifunctional Neurons
---------------------------------- WORKFLOW -----------------------------------------------------
1) First find and save 3 files that correspond to Slow, Fast, Medium
2) Open tool, pick neurons to view
3) Choose the boxes to click
4) Load params file and display the view

----------------------------------- TASKS --------------------------------------------------------
Task 1)
Make ModCom spiking only
Count the number of SPikes
Feed the spike into Sigma_e, Beta_e
Alpha, sigma already set
...

At this point, how to deal w modCom?
Mod Com??
Should it be connected to CPG?
Yes, and it should increase Sigma_e and Beta_e
To start the thing from bursting/spiking?

How will Forward affect ModCom?

Would Forward make Modcom Spike?
Count number of spikes from Forward?
Count number of spikes from ModCom?

How would fast, slow, react differently?

Forward --> turn on ModCom
Count number of spikes from Modcom?























Task 2) (pretty much done)
Add Command CheckBoxes and Speed
-Functionality:
What will command changes/toggling do:
It will basically set the chosen Command Neuron to Spiking (Max 2 together, need a method to stop ppl picking more than 2)
Which then activates the CPG Neuron with new alpha, sigma!
    -> No need for ModCom then? Basically just simulate ModCom?
        -> What function will it call. or loadParms already implemented
                It will call setChangeParam, load the chosen saved Parameters (fast, slow, medium)
                    -> then call xmain to do the calculation
-Implementation:
CommandStateViewController is connected to an XIB file
Want CommandStateViewController to Appear simultanously with the Oscilloscope
And changes there will affect changes in Oscilloscope

option 1) shared methods
    The two has to share a common controller, or share method somewhere.
    That they can both call...prolly a bad idea

option 2) message passing (better)
    CommandStateController send a message with all its options in an nsarray or sth chosen to OscilloscopeViewController, and OscilloscopeViewController will implement accordingly
    OscilloscopeViewController will need a OpenMessageMethod
    Will this method be in AppDelegate? It should?

DONE
NOW, NEED TO SEPARATE LEFT AND RIGHT!!!!
(done)
USE THIS:
switch (iSide){
case left:
pExcSegPcnDep[iSide][iSeg].gStrength = 0.75;
case right:
pExcSegPcnDep[iSide][iSeg].gStrength = 0.50;

Add a Param called left or Right!

WHY DOES ADDING @class Appdelegate fixes forward declaration??


Task 3: Make it move continuously...
HOW TO
When Xmain is calculating, have to send an interrupt that change values on the fly!
SO XMAIN WILL KEEP READING FROM A STREAM, AND UPDATE DATA ACCORDINGLY
WE CAN MAKE XMAIN RUN FOREVER ACTUALLY
make Xmain run forever!!!!!
Then, Xmain keep calling a function that will update its parameter constantly!!!!
What will that function do?
It will constantly checking from the Params Array obviously!!!
Ohh!!!
Call it checkParamChange

What will it do?
Let's just start w parameter change at this point!
how will it know if parameter has been changed

IT HAS SOMETHING TO DO WIH BEGIN_EDITING_PARAMS!!!
DEAL WITH IT!




New





